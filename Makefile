# Makefile –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ–±—É—á–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤

.PHONY: help install test run demo clean docs

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python3
PIP = pip3
PYTEST = pytest

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
NC = \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(GREEN)üöÄ –°–∏—Å—Ç–µ–º–∞ –æ–±—É—á–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã$(NC)"
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(NC)"
	$(PIP) install -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

install-dev: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	$(PIP) install -r requirements.txt
	$(PIP) install -e .
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã...$(NC)"
	$(PYTEST) tests/ -v --cov=crypto_trading_agent --cov=multi_agent_ensemble
	@echo "$(GREEN)‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã$(NC)"

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –æ–±—É—á–µ–Ω–∏—è —Ç–æ—Ä–≥–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤...$(NC)"
	$(PYTHON) run_trading_system.py

demo: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–µ–∂–∏–º
	@echo "$(GREEN)üéØ –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–µ–∂–∏–º...$(NC)"
	$(PYTHON) example_usage.py

notebook: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Jupyter notebook
	@echo "$(GREEN)üìì –ó–∞–ø—É—Å–∫–∞–µ–º Jupyter notebook...$(NC)"
	jupyter notebook train_agents_new.ipynb

gui: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å GUI (Streamlit)
	@echo "$(GREEN)üñ•Ô∏è  –ó–∞–ø—É—Å–∫–∞–µ–º GUI (Streamlit)...$(NC)"
	PYTHONPATH=$(shell pwd) poetry run streamlit run src/gui/app.py

ensemble: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω—Å–∞–º–±–ª—å –∞–≥–µ–Ω—Ç–æ–≤
	@echo "$(GREEN)üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω—Å–∞–º–±–ª—å –∞–≥–µ–Ω—Ç–æ–≤...$(NC)"
	$(PYTHON) multi_agent_ensemble.py

single-agent: ## –û–±—É—á–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
	@echo "$(GREEN)ü§ñ –û–±—É—á–∞–µ–º –æ–¥–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞...$(NC)"
	$(PYTHON) - <<-'PY'
	from crypto_trading_agent import train_crypto_trading_agent, test_agent_trading
	agent = train_crypto_trading_agent('BTC')
	if agent:
	    test_results = test_agent_trading(agent, test_period_days=3)
	    print('‚úÖ –ê–≥–µ–Ω—Ç –æ–±—É—á–µ–Ω –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω')
	else:
	    print('‚ùå –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞')
	PY

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "$(YELLOW)üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...$(NC)"
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type f -name "*.log" -delete
	find . -type f -name "*.json" -name "*state*" -delete
	find . -type f -name "*.pth" -delete
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

clean-models: ## –û—á–∏—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
	@echo "$(YELLOW)üóëÔ∏è  –û—á–∏—â–∞–µ–º –æ–±—É—á–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏...$(NC)"
	find . -type f -name "*.pth" -delete
	find . -type f -name "*.pt" -delete
	find . -type f -name "*.ckpt" -delete
	@echo "$(GREEN)‚úÖ –ú–æ–¥–µ–ª–∏ –æ—á–∏—â–µ–Ω—ã$(NC)"

docs: ## –°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
	@echo "$(GREEN)üìö –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é...$(NC)"
	cd docs && make html
	@echo "$(GREEN)‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞$(NC)"

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º...$(NC)"
	flake8 crypto_trading_agent.py multi_agent_ensemble.py example_usage.py
	black --check crypto_trading_agent.py multi_agent_ensemble.py example_usage.py
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(GREEN)‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–¥...$(NC)"
	black crypto_trading_agent.py multi_agent_ensemble.py example_usage.py
	@echo "$(GREEN)‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω$(NC)"

check-deps: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(NC)"
	$(PIP) check
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ$(NC)"

update-deps: ## –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(YELLOW)üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...$(NC)"
	$(PIP) install --upgrade -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

setup: install ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"
	@echo "$(YELLOW)–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:$(NC)"
	@echo "  - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É: make run"
	@echo "  - –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ: make demo"
	@echo "  - –û–±—É—á–∏—Ç—å –æ–¥–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞: make single-agent"
	@echo "  - –ó–∞–ø—É—Å—Ç–∏—Ç—å notebook: make notebook"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-setup: install-dev lint test ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(GREEN)üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
prod-setup: install check-deps ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
	@echo "$(GREEN)üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
	@echo "$(GREEN)üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:$(NC)"
	@echo "  Python: $(shell $(PYTHON) --version)"
	@echo "  PyTorch: $(shell $(PYTHON) -c 'import torch; print(torch.__version__)' 2>/dev/null || echo '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
	@echo "  CUDA –¥–æ—Å—Ç—É–ø–Ω–∞: $(shell $(PYTHON) -c 'import torch; print(torch.cuda.is_available())' 2>/dev/null || echo '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')"
	@echo "  –î–æ—Å—Ç—É–ø–Ω—ã–µ GPU: $(shell $(PYTHON) -c 'import torch; print(torch.cuda.device_count())' 2>/dev/null || echo '0')"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:$(NC)"
	@echo "  –§–∞–π–ª—ã –∞–≥–µ–Ω—Ç–æ–≤: $(shell ls -1 *.py 2>/dev/null | wc -l | tr -d ' ')"
	@echo "  Notebooks: $(shell ls -1 *.ipynb 2>/dev/null | wc -l | tr -d ' ')"
	@echo "  –õ–æ–≥–∏: $(shell ls -1 *.log 2>/dev/null | wc -l | tr -d ' ')"
	@echo "  –°–æ—Å—Ç–æ—è–Ω–∏—è: $(shell ls -1 *state*.json 2>/dev/null | wc -l | tr -d ' ')"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
	@echo "$(GREEN)üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:$(NC)"
	@tail -n 20 trading_system.log 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

monitor: ## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
	@echo "$(GREEN)üëÄ –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...$(NC)"
	@tail -f trading_system.log 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
backup: ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
	@echo "$(GREEN)üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é...$(NC)"
	@tar -czf backup_$(shell date +%Y%m%d_%H%M%S).tar.gz *.py *.ipynb *.md *.txt 2>/dev/null || echo "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
	@echo "$(GREEN)‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞$(NC)"

restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
	@echo "$(YELLOW)üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...$(NC)"
	@ls -1 backup_*.tar.gz 2>/dev/null | head -1 | xargs -I {} tar -xzf {} || echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
	@echo "$(GREEN)‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ$(NC)"

# –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
commands: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
	@echo "$(GREEN)üìö –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## .*$$/ {printf "  %-20s %s\n", $$1, $$2}' $(MAKEFILE_LIST)

# –ö–æ–º–∞–Ω–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.DEFAULT_GOAL := help


